name: Release Build

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.0"
          cache: true


      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Build for multiple architectures
        run: |
          mkdir -p build
          PLATFORMS="linux/amd64 linux/arm64 darwin/amd64 darwin/arm64 windows/amd64"
          for PLATFORM in $PLATFORMS; do
            OS=$(echo $PLATFORM | cut -d'/' -f1)
            ARCH=$(echo $PLATFORM | cut -d'/' -f2)
            
            OUTPUT="build/brew-api-${OS}-${ARCH}"
            if [ "$OS" = "windows" ]; then
              OUTPUT="${OUTPUT}.exe"
            fi
            
            echo "Building for $OS/$ARCH..."
            CGO_ENABLED=0 GOOS=$OS GOARCH=$ARCH go build -a -ldflags '-extldflags "-static"' -o $OUTPUT ./cmd/
          done

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
